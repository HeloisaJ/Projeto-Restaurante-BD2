{"ast":null,"code":"var _jsxFileName = \"/home/princevegeta/Documentos/sl/Projeto-Restaurante-BD2/pizzaria/src/components/UsePoints.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/UsePoints.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsePoints() {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [selectedClientId, setSelectedClientId] = useState('');\n  const [dishes, setDishes] = useState([]);\n  const [selectedDishId, setSelectedDishId] = useState('');\n  const [pointsUsed, setPointsUsed] = useState(0);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchClients = async () => {\n      try {\n        const response = await fetch('/api/clients');\n        if (!response.ok) throw new Error('Erro ao carregar clientes.');\n        const data = await response.json();\n        setClients(data);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    const fetchDishes = async () => {\n      try {\n        const response = await fetch('/api/dishes');\n        if (!response.ok) throw new Error('Erro ao carregar pratos.');\n        const data = await response.json();\n        setDishes(data);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchClients();\n    fetchDishes();\n  }, []);\n  const handleUsePoints = async () => {\n    setMessage('');\n    setError('');\n    const selectedClient = clients.find(client => client.id === selectedClientId);\n    if (!selectedClient) {\n      setError('Selecione um cliente válido.');\n      return;\n    }\n    const dish = dishes.find(dish => dish.id === selectedDishId);\n    if (!dish) {\n      setError('Selecione um prato válido.');\n      return;\n    }\n    const totalPointsNeeded = Math.ceil(dish.valor); // Usar centavos como 1 ponto extra\n    if (selectedClient.pontos < totalPointsNeeded) {\n      setError('Pontos insuficientes para adquirir este prato.');\n      return;\n    }\n\n    // Atualiza os pontos do cliente e registra a venda (simulação)\n    try {\n      const response = await fetch('/api/use-points', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          clientId: selectedClientId,\n          dishId: selectedDishId,\n          pointsUsed: totalPointsNeeded\n        })\n      });\n      if (!response.ok) throw new Error('Erro ao utilizar os pontos.');\n      const updatedClient = await response.json();\n      setClients(clients.map(client => client.id === updatedClient.id ? updatedClient : client));\n      setMessage(`Prato ${dish.nome} adquirido com sucesso!`);\n      setPointsUsed(totalPointsNeeded);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Uso de Pontos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.errorMessage,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }, this), clients.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.message,\n      children: \"Nenhum cliente registrado ainda.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        children: \"Selecione o Cliente:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedClientId,\n        onChange: e => setSelectedClientId(e.target.value),\n        className: styles.inputField,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione um cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), clients.map(client => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: client.id,\n          children: client.nome\n        }, client.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        children: \"Selecione o Prato:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDishId,\n        onChange: e => setSelectedDishId(e.target.value),\n        className: styles.inputField,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione um prato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), dishes.map(dish => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dish.id,\n          children: [dish.nome, \" - R$\", dish.valor.toFixed(2)]\n        }, dish.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUsePoints,\n      className: styles.btnUsePoints,\n      children: \"Usar Pontos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(UsePoints, \"jSX2c1D9IZOzb3g9tuA94W5WxCw=\");\n_c = UsePoints;\nexport default UsePoints;\nvar _c;\n$RefreshReg$(_c, \"UsePoints\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","UsePoints","_s","clients","setClients","selectedClientId","setSelectedClientId","dishes","setDishes","selectedDishId","setSelectedDishId","pointsUsed","setPointsUsed","message","setMessage","error","setError","fetchClients","response","fetch","ok","Error","data","json","err","fetchDishes","handleUsePoints","selectedClient","find","client","id","dish","totalPointsNeeded","Math","ceil","valor","pontos","method","headers","body","JSON","stringify","clientId","dishId","updatedClient","map","nome","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","length","formGroup","label","value","onChange","e","target","inputField","toFixed","onClick","btnUsePoints","_c","$RefreshReg$"],"sources":["/home/princevegeta/Documentos/sl/Projeto-Restaurante-BD2/pizzaria/src/components/UsePoints.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from '../styles/UsePoints.module.css';\n\nfunction UsePoints() {\n    const [clients, setClients] = useState([]);\n    const [selectedClientId, setSelectedClientId] = useState('');\n    const [dishes, setDishes] = useState([]);\n    const [selectedDishId, setSelectedDishId] = useState('');\n    const [pointsUsed, setPointsUsed] = useState(0);\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const fetchClients = async () => {\n            try {\n                const response = await fetch('/api/clients');\n                if (!response.ok) throw new Error('Erro ao carregar clientes.');\n                const data = await response.json();\n                setClients(data);\n            } catch (err) {\n                setError(err.message);\n            }\n        };\n\n        const fetchDishes = async () => {\n            try {\n                const response = await fetch('/api/dishes');\n                if (!response.ok) throw new Error('Erro ao carregar pratos.');\n                const data = await response.json();\n                setDishes(data);\n            } catch (err) {\n                setError(err.message);\n            }\n        };\n\n        fetchClients();\n        fetchDishes();\n    }, []);\n\n    const handleUsePoints = async () => {\n        setMessage('');\n        setError('');\n\n        const selectedClient = clients.find(client => client.id === selectedClientId);\n        if (!selectedClient) {\n            setError('Selecione um cliente válido.');\n            return;\n        }\n\n        const dish = dishes.find(dish => dish.id === selectedDishId);\n        if (!dish) {\n            setError('Selecione um prato válido.');\n            return;\n        }\n\n        const totalPointsNeeded = Math.ceil(dish.valor); // Usar centavos como 1 ponto extra\n        if (selectedClient.pontos < totalPointsNeeded) {\n            setError('Pontos insuficientes para adquirir este prato.');\n            return;\n        }\n\n        // Atualiza os pontos do cliente e registra a venda (simulação)\n        try {\n            const response = await fetch('/api/use-points', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    clientId: selectedClientId,\n                    dishId: selectedDishId,\n                    pointsUsed: totalPointsNeeded,\n                }),\n            });\n\n            if (!response.ok) throw new Error('Erro ao utilizar os pontos.');\n\n            const updatedClient = await response.json();\n            setClients(clients.map(client => \n                client.id === updatedClient.id ? updatedClient : client\n            ));\n            setMessage(`Prato ${dish.nome} adquirido com sucesso!`);\n            setPointsUsed(totalPointsNeeded);\n        } catch (err) {\n            setError(err.message);\n        }\n    };\n\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>Uso de Pontos</h1>\n            {error && <p className={styles.errorMessage}>{error}</p>}\n            {clients.length === 0 && <p className={styles.message}>Nenhum cliente registrado ainda.</p>}\n            <div className={styles.formGroup}>\n                <label className={styles.label}>Selecione o Cliente:</label>\n                <select\n                    value={selectedClientId}\n                    onChange={(e) => setSelectedClientId(e.target.value)}\n                    className={styles.inputField}\n                >\n                    <option value=\"\">Selecione um cliente</option>\n                    {clients.map(client => (\n                        <option key={client.id} value={client.id}>{client.nome}</option>\n                    ))}\n                </select>\n            </div>\n            <div className={styles.formGroup}>\n                <label className={styles.label}>Selecione o Prato:</label>\n                <select\n                    value={selectedDishId}\n                    onChange={(e) => setSelectedDishId(e.target.value)}\n                    className={styles.inputField}\n                >\n                    <option value=\"\">Selecione um prato</option>\n                    {dishes.map(dish => (\n                        <option key={dish.id} value={dish.id}>{dish.nome} - R${dish.valor.toFixed(2)}</option>\n                    ))}\n                </select>\n            </div>\n            <button onClick={handleUsePoints} className={styles.btnUsePoints}>Usar Pontos</button>\n            {message && <p className={styles.message}>{message}</p>}\n        </div>\n    );\n}\n\nexport default UsePoints;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}