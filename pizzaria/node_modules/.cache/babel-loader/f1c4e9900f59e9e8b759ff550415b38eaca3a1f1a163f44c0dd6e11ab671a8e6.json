{"ast":null,"code":"var _jsxFileName = \"/home/princevegeta/Documentos/sl/Projeto-Restaurante-BD2/pizzaria/src/components/IngredientManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/IngredientManagement.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IngredientManagement() {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  const [dishes, setDishes] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchIngredients = async () => {\n      try {\n        const response = await fetch('/api/ingredients');\n        if (!response.ok) throw new Error('Erro ao carregar ingredientes.');\n        const data = await response.json();\n        setIngredients(data);\n      } catch (err) {\n        setMessage(err.message);\n      }\n    };\n    const fetchDishes = async () => {\n      try {\n        const response = await fetch('/api/dishes');\n        if (!response.ok) throw new Error('Erro ao carregar pratos.');\n        const data = await response.json();\n        setDishes(data);\n      } catch (err) {\n        setMessage(err.message);\n      }\n    };\n    fetchIngredients();\n    fetchDishes();\n  }, []);\n  const checkExpiredIngredients = () => {\n    const currentDate = new Date();\n    const updatedDishes = dishes.map(dish => {\n      const hasExpiredIngredient = dish.ingredients.some(ingredientId => {\n        const ingredient = ingredients.find(ing => ing.id === ingredientId);\n        return ingredient && new Date(ingredient.validade) < currentDate;\n      });\n      return {\n        ...dish,\n        available: !hasExpiredIngredient\n      };\n    });\n    setDishes(updatedDishes);\n    setMessage('Verificação de ingredientes concluída.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Gest\\xE3o de Ingredientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkExpiredIngredients,\n      className: styles.btnCheck,\n      children: \"Verificar Ingredientes Vencidos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.message,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ingredientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Validade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ingredient.nome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(ingredient.validade).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(ingredient.validade) < new Date() ? 'Vencido' : 'Válido'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, ingredient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pratos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dishes.map(dish => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [dish.nome, \" - \", dish.available ? 'Disponível' : 'Indisponível']\n      }, dish.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(IngredientManagement, \"JVwsh9cC7VCt8nF+iZ2wSO4yUqU=\");\n_c = IngredientManagement;\nexport default IngredientManagement;\nvar _c;\n$RefreshReg$(_c, \"IngredientManagement\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","IngredientManagement","_s","ingredients","setIngredients","dishes","setDishes","message","setMessage","fetchIngredients","response","fetch","ok","Error","data","json","err","fetchDishes","checkExpiredIngredients","currentDate","Date","updatedDishes","map","dish","hasExpiredIngredient","some","ingredientId","ingredient","find","ing","id","validade","available","className","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","btnCheck","table","nome","toLocaleDateString","_c","$RefreshReg$"],"sources":["/home/princevegeta/Documentos/sl/Projeto-Restaurante-BD2/pizzaria/src/components/IngredientManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from '../styles/IngredientManagement.module.css';\n\nfunction IngredientManagement() {\n    const [ingredients, setIngredients] = useState([]);\n    const [dishes, setDishes] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        const fetchIngredients = async () => {\n            try {\n                const response = await fetch('/api/ingredients');\n                if (!response.ok) throw new Error('Erro ao carregar ingredientes.');\n                const data = await response.json();\n                setIngredients(data);\n            } catch (err) {\n                setMessage(err.message);\n            }\n        };\n\n        const fetchDishes = async () => {\n            try {\n                const response = await fetch('/api/dishes');\n                if (!response.ok) throw new Error('Erro ao carregar pratos.');\n                const data = await response.json();\n                setDishes(data);\n            } catch (err) {\n                setMessage(err.message);\n            }\n        };\n\n        fetchIngredients();\n        fetchDishes();\n    }, []);\n\n    const checkExpiredIngredients = () => {\n        const currentDate = new Date();\n        const updatedDishes = dishes.map(dish => {\n            const hasExpiredIngredient = dish.ingredients.some(ingredientId => {\n                const ingredient = ingredients.find(ing => ing.id === ingredientId);\n                return ingredient && new Date(ingredient.validade) < currentDate;\n            });\n            return { ...dish, available: !hasExpiredIngredient };\n        });\n\n        setDishes(updatedDishes);\n        setMessage('Verificação de ingredientes concluída.');\n    };\n\n    return (\n        <div className={styles.container}>\n            <h1 className={styles.title}>Gestão de Ingredientes</h1>\n            <button onClick={checkExpiredIngredients} className={styles.btnCheck}>\n                Verificar Ingredientes Vencidos\n            </button>\n            {message && <p className={styles.message}>{message}</p>}\n            <h2>Ingredientes</h2>\n            <table className={styles.table}>\n                <thead>\n                    <tr>\n                        <th>Nome</th>\n                        <th>Validade</th>\n                        <th>Status</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {ingredients.map(ingredient => (\n                        <tr key={ingredient.id}>\n                            <td>{ingredient.nome}</td>\n                            <td>{new Date(ingredient.validade).toLocaleDateString()}</td>\n                            <td>\n                                {new Date(ingredient.validade) < new Date() ? 'Vencido' : 'Válido'}\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <h2>Pratos</h2>\n            <ul>\n                {dishes.map(dish => (\n                    <li key={dish.id}>\n                        {dish.nome} - {dish.available ? 'Disponível' : 'Indisponível'}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default IngredientManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}